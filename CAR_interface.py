# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'CAR_interface.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QPixmap, QImage, QFont
from PyQt5.QtWidgets import QMessageBox

class Ui_CarAccidentRecognition(object):
    def setupUi(self, CarAccidentRecognition):

        CarAccidentRecognition.setObjectName("CarAccidentRecognition")
        self.w = 1600
        self.h = 600
        CarAccidentRecognition.resize(self.w, self.h) # The size of the window
        self.centralwidget = QtWidgets.QWidget(CarAccidentRecognition)
        self.centralwidget.setObjectName("centralwidget")

        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget) 

        # setup the upload button
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setObjectName("Report Accident")
        self.pushButton.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        self.pushButton.setMinimumSize(200, 100)  # Set minimum size
        self.pushButton.setFont(QFont('Arial', 16))  # Set font
        self.pushButton.setStyleSheet("background-color: white; color: black;")  # Set background and text color
        self.gridLayout.addWidget(self.pushButton, 1, 0, 2, 1)
        self.pushButton.clicked.connect(self.on_upload_button_clicked)

        self.graphicsView = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView.setObjectName("graphicsView")
        self.graphicsView.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addWidget(self.graphicsView, 0, 0)

        self.graphicsView_3D = QtWidgets.QGraphicsView(self.centralwidget)
        self.graphicsView_3D.setObjectName("graphicsView_3D")
        self.graphicsView_3D.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addWidget(self.graphicsView_3D, 0, 1)

        CarAccidentRecognition.setCentralWidget(self.centralwidget)
        self.retranslateUi(CarAccidentRecognition)
        QtCore.QMetaObject.connectSlotsByName(CarAccidentRecognition)

        self.closeButton = QtWidgets.QPushButton(self.centralwidget)
        self.closeButton.setObjectName("closeButton")
        self.closeButton.setText("Power off")
        self.closeButton.setSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        self.closeButton.setMinimumSize(200, 100)  # Set minimum size
        self.closeButton.setFont(QFont('Arial', 16))  # Set font
        self.closeButton.setStyleSheet("background-color: white; color: black;")  # Set background and text color
        self.closeButton.clicked.connect(self.on_close_button_clicked)
        self.gridLayout.addWidget(self.closeButton, 1, 1, 2, 1)
        self.close_button_clicked = False
        self.upload_button_clicked = False  # Add boolean variable

    def checkclose(self):
        return self.close_button_clicked
    
    def checkupload(self):
        return self.upload_button_clicked 

    def on_close_button_clicked(self):
        self.close_button_clicked = True

    def on_upload_button_clicked(self):
        #reply = QMessageBox.question(None, 'Upload', 'Sure to upload?', QMessageBox.Yes | QMessageBox.No, QMessageBox.No)
        
        msg_box = QMessageBox()
        msg_box.setText("Sure to upload?")
        msg_box.setStandardButtons(QMessageBox.Yes | QMessageBox.No)
        msg_box.setDefaultButton(QMessageBox.No)
        msg_box.setStyleSheet("QLabel{min-width: 500px; font-size: 25px;} QPushButton{width: 250px;height: 50px; font-size: 20px;}")
        reply = msg_box.exec_()

        if reply == QMessageBox.Yes:
            print("Uploaded")
            self.upload_button_clicked = True
        else:
            print("Uploaded canceled")
            self.upload_button_clicked = False

    def retranslateUi(self, CarAccidentRecognition):
        _translate = QtCore.QCoreApplication.translate
        CarAccidentRecognition.setWindowTitle(_translate("CarAccidentRecognition", "CarAccidentRecognition"))
        self.pushButton.setText(_translate("CarAccidentRecognition", "Upload"))

    def update_bev_image(self, image):
        """Update the BEV image in the GUI."""
        image = QImage(image.data, image.shape[1], image.shape[0], image.strides[0], QImage.Format_RGB888)
        pixmap = QPixmap.fromImage(image)
        self.graphicsView.setScene(QtWidgets.QGraphicsScene())
        self.graphicsView.scene().addPixmap(pixmap)
        rect = QtCore.QRectF(pixmap.rect())
        self.graphicsView.fitInView(rect, QtCore.Qt.KeepAspectRatio)

    def update_3d_image(self, image):
        """Update the 3D bounding box image in the GUI."""
        image = QImage(image.data, image.shape[1], image.shape[0], image.strides[0], QImage.Format_RGB888)
        pixmap = QPixmap.fromImage(image)
        self.graphicsView_3D.setScene(QtWidgets.QGraphicsScene())
        self.graphicsView_3D.scene().addPixmap(pixmap)
        rect = QtCore.QRectF(pixmap.rect())
        self.graphicsView_3D.fitInView(rect, QtCore.Qt.KeepAspectRatio)


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    CarAccidentRecognition = QtWidgets.QMainWindow()
    ui = Ui_CarAccidentRecognition()
    ui.setupUi(CarAccidentRecognition)
    CarAccidentRecognition.show()
    sys.exit(app.exec_())